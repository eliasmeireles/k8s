image:
  repository: eliasmeireles/proxy-server
  pullPolicy: IfNotPresent
  tag: "1"

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: { }
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"

podSecurityContext: { }
securityContext: { }

labels:
  app: internal-server

service:
  type: LoadBalancer
  port: 80
  targetPort: 80
  nodePort: 30080

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: k8s.learning.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: internal-server
                port:
                  number: 80

resources:
  limits:
    cpu: 800m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10

nodeSelector:
  kubernetes.io/os: linux

tolerations: [ ]

affinity: { }

networkPolicy:
  enabled: true
  name: allow-internal-server-traffic
  namespace: development
  labels:
    app: internal-server
  ingress:

deployment:
  metadata:
    labels:
      app: internal-server

env:
  - name: CONFIG_BASE_PATH
    value: "/opt/proxy-server/config"
  - name: HTTPS_ENABLE
    value: "false"
  - name: LOGSTASH_URI
    value: "logstash:5000"
  - name: LOGSTASH_ENABLED
    value: "false"
