apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-request
  labels:
    app: http-request
spec:
  selector:
    matchLabels:
      app: http-request
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
      labels:
        app: http-request
    spec:
      serviceAccountName: default
      containers:
        - name: http-request
          image: "eliasmeireles/http-request:v1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: 300m
              memory: 64Mi
            requests:
              cpu: 100m
              memory: 32Mi
      nodeSelector:
        kubernetes.io/os: linux
      tolerations: [ ]
      affinity: { }

---
apiVersion: v1
kind: Service
metadata:
  name: http-request
  labels:
    app: http-request
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: http-request

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: http-request-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: http-request.v1.k8s.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: http-request
                port:
                  number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: http-request
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: http-request
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-http-request-traffic
  labels:
    app: http-request
spec:
  podSelector:
    matchLabels:
      app: http-request
  ingress:
    - from:
        - namespaceSelector: { }
          podSelector: { }
      ports:
        - protocol: TCP
          port: 80
